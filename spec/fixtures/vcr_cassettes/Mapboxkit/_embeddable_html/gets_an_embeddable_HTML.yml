---
http_interactions:
- request:
    method: get
    uri: https://api.mapbox.com/styles/v1/<MAPBOX_USERNAME>/clb1jxblw000014tbwhfjxy31.html?access_token=<MAPBOX_ACCESS_TOKEN>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mapboxkit 0.0.1.alpha
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 29 Nov 2022 08:26:39 GMT
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Link
      X-Origin:
      - mbx-styles
      X-Dns-Prefetch-Control:
      - 'on'
      X-Content-Type-Options:
      - nosniff
      Referrer-Policy:
      - origin
      Cache-Control:
      - max-age=900
      Etag:
      - W/"8b3d-Uzs2eYiE75OV2gsqxFhWwvKO6Wk"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 7d2fdd4443cdc7a3860976f6cd868872.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - NRT12-C2
      X-Amz-Cf-Id:
      - kJ9hvemLQVxPVLgjTbYQ3NCxTXzDk8eHA2so56zOETQ24afB84It-g==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 29 Nov 2022 08:26:39 GMT
recorded_with: VCR 6.1.0
