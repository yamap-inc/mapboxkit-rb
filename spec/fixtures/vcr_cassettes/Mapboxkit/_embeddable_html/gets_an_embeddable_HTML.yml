---
http_interactions:
- request:
    method: get
    uri: https://api.mapbox.com/styles/v1/<MAPBOX_USERNAME>/cl7h7618q000a14o1guabw90p.html?access_token=<MAPBOX_ACCESS_TOKEN>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mapboxkit 0.0.1.alpha
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 31 Aug 2022 11:53:42 GMT
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Expose-Headers:
      - Link
      X-Origin:
      - mbx-styles
      X-Dns-Prefetch-Control:
      - 'on'
      X-Content-Type-Options:
      - nosniff
      Referrer-Policy:
      - origin
      Cache-Control:
      - max-age=900
      Etag:
      - W/"8b3c-L7CqkMAX6BGpy4+Wg5LEE+1emMc"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 08c50aa2ff50c29de253b1b94915e68a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - KIX56-C2
      X-Amz-Cf-Id:
      - rZcLUkg2_XpFqk0YCb4-SpwHylb-a4kad_-s-LedXtCvoJnbcLN3KQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 31 Aug 2022 11:53:40 GMT
recorded_with: VCR 6.1.0
